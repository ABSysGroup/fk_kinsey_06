-- VHDL Entity tb_kalman.tb_kalman_fast.symbol
--
-- Created:
--          by - Juan Lanchares.UNKNOWN (LANCHARES)
--          at - 07:57:32 23/06/2015
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2012.1 (Build 6)
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.std_logic_arith.all;

entity tb_kalman_fast is
-- Declarations

end tb_kalman_fast ;

--
-- VHDL Architecture tb_kalman.tb_kalman_fast.struct
--
-- Created:
--          by - Juan Lanchares.UNKNOWN (LANCHARES)
--          at - 07:57:32 23/06/2015
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2012.1 (Build 6)
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.std_logic_arith.all;
use ieee.numeric_std.ALL;
use IEEE.std_logic_textio.all;
library STD;
use STD.textio.all;
library common;
use common.constants.all;

library kalman_filter_fast;
library tb_kalman;

architecture struct of tb_kalman_fast is

   -- Architecture declarations

   -- Internal signal declarations
   signal clk            : std_logic;
   signal q_addr         : std_logic_vector(3 downto 0);     -- address for memory Q
   signal q_data         : std_logic_vector(15 downto 0);    -- data coming from memory Q
   signal r              : std_logic_vector(15 downto 0);
   signal rst            : std_logic;
   signal start          : std_logic;                        -- global start
   signal xpo_data_out   : std_logic_vector(15 downto 0);
   signal xpo_write_fifo : std_logic;
   signal z_f            : std_logic_vector(15 downto 0);
   signal z_f_ready      : std_logic;


   -- Component Declarations
   component rom4x4
   generic (
      g_rom_init : t_4x4_matrix := c_rom_I
   );
   port (
      addrb : in     std_logic_vector (3 downto 0);
      clk   : in     std_logic ;
      rst   : in     std_logic ;
      doutb : out    std_logic_vector (15 downto 0)
   );
   end component;
   component kalman_filter_fast
   port (
      clk            : in     std_logic ;                     -- Global clock
      q_data         : in     std_logic_vector (15 downto 0); -- data coming from memory Q
      r              : in     std_logic_vector (15 downto 0);
      rst            : in     std_logic ;                     -- Synchronous reset
      start          : in     std_logic ;                     -- global start
      z_f_ready      : in     std_logic ;
      z_fast         : in     std_logic_vector (15 downto 0); -- Input of the measured data
      q_addr         : out    std_logic_vector (3 downto 0);  -- address for memory Q
      xc_f_2_f       : out    std_logic_vector (15 downto 0); -- posteriori state data
      xc_f_2_f_write : out    std_logic                       -- posteriori state fifo control signal
   );
   end component;
   component file_logger
   generic (
      archivo_entrada : string := "T:\TFG2015\src\tb_design\tb_common\text\tb_entrada_kalman_filter.txt";
      archivo_salida  : string := "T:\TFG2015\src\tb_design\tb_common\text\tb_salida_kalman_filter.txt"
   );
   port (
      clk            : in     std_logic ;
      rst            : in     std_logic ;
      xpo_data_out   : in     std_logic_vector (15 downto 0);
      xpo_write_fifo : in     std_logic ;
      z_f            : out    std_logic_vector (15 downto 0);
      z_f_ready      : out    std_logic 
   );
   end component;

   -- Optional embedded configurations
   -- pragma synthesis_off
   for all : file_logger use entity tb_kalman.file_logger;
   for all : kalman_filter_fast use entity kalman_filter_fast.kalman_filter_fast;
   for all : rom4x4 use entity common.rom4x4;
   -- pragma synthesis_on


begin
   -- Architecture concurrent statements
   -- HDL Embedded Text Block 9 clk
   p_clk : process
   begin
     clk <= '0';
     wait for 5 ns;
     clk <= '1';
     wait for 5 ns;
   end process p_clk;                                      
   
   

   -- HDL Embedded Text Block 10 rst
   p_rst : process
   begin
     --wait for 10 ns;
     rst <= '1';
     wait until rising_edge(clk);
     wait until rising_edge(clk);
     rst <= '0';
     wait;
   end process p_rst;
   
   

   -- HDL Embedded Text Block 11 r
   p_r : process(clk)
   begin
     if rising_edge(clk) then
       if rst = '1' then
         r <= (others => '0');
       else
         r <= "0000000000010000";
       end if;
     end if;
   end process p_r;
   
   
   
   
   
   
   
   
   
   
   
   
   

   -- HDL Embedded Text Block 12 start
   p_start : process(clk)
   begin
     if rising_edge(clk) then
       if rst = '1' then
         start <= '0';
       else
         start <= '1';
       end if;
     end if;
   end process p_start;
   
   
   


   -- Instance port mappings.
   i_q_rom : rom4x4
      generic map (
         g_rom_init => c_rom_q
      )
      port map (
         addrb => q_addr,
         clk   => clk,
         rst   => rst,
         doutb => q_data
      );
   i_kalman_filter_Fast : kalman_filter_fast
      port map (
         clk            => clk,
         q_data         => q_data,
         r              => r,
         rst            => rst,
         start          => start,
         z_f_ready      => z_f_ready,
         z_fast         => z_f,
         q_addr         => q_addr,
         xc_f_2_f       => xpo_data_out,
         xc_f_2_f_write => xpo_write_fifo
      );
   i_file_logger : file_logger
      generic map (
         archivo_entrada => "K:\fk_kinsey_06\sim\stimuli\BGGlucose_KF_stimuli_for_Questa_Q12.4.txt",
         archivo_salida  => "K:\fk_kinsey_06\sim\Kinsey2006\BGGlucose_KF_results_of_Questa_Q12.4.txt"
      )
      port map (
         clk            => clk,
         rst            => rst,
         xpo_data_out   => xpo_data_out,
         xpo_write_fifo => xpo_write_fifo,
         z_f            => z_f,
         z_f_ready      => z_f_ready
      );

end struct;
